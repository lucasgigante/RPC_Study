# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import teste_pb2 as teste__pb2


class ServiceStub(object):
    """Definicao do servico grpc
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.method1 = channel.unary_unary(
                '/teste.Service/method1',
                request_serializer=teste__pb2.Nada.SerializeToString,
                response_deserializer=teste__pb2.Nada.FromString,
                )
        self.method2 = channel.unary_unary(
                '/teste.Service/method2',
                request_serializer=teste__pb2.Long.SerializeToString,
                response_deserializer=teste__pb2.Long.FromString,
                )
        self.method3 = channel.unary_unary(
                '/teste.Service/method3',
                request_serializer=teste__pb2.LongList.SerializeToString,
                response_deserializer=teste__pb2.Long.FromString,
                )
        self.method4 = channel.unary_unary(
                '/teste.Service/method4',
                request_serializer=teste__pb2.String.SerializeToString,
                response_deserializer=teste__pb2.String.FromString,
                )
        self.method5 = channel.unary_unary(
                '/teste.Service/method5',
                request_serializer=teste__pb2.Carro.SerializeToString,
                response_deserializer=teste__pb2.Carro.FromString,
                )
        self.method6 = channel.unary_unary(
                '/teste.Service/method6',
                request_serializer=teste__pb2.MatrizesRequest.SerializeToString,
                response_deserializer=teste__pb2.MatrizResposta.FromString,
                )


class ServiceServicer(object):
    """Definicao do servico grpc
    """

    def method1(self, request, context):
        """Void to Void
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def method2(self, request, context):
        """Long to Long
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def method3(self, request, context):
        """8 Long to Long
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def method4(self, request, context):
        """String to String
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def method5(self, request, context):
        """Carro to Carro
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def method6(self, request, context):
        """Matriz to Matriz
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'method1': grpc.unary_unary_rpc_method_handler(
                    servicer.method1,
                    request_deserializer=teste__pb2.Nada.FromString,
                    response_serializer=teste__pb2.Nada.SerializeToString,
            ),
            'method2': grpc.unary_unary_rpc_method_handler(
                    servicer.method2,
                    request_deserializer=teste__pb2.Long.FromString,
                    response_serializer=teste__pb2.Long.SerializeToString,
            ),
            'method3': grpc.unary_unary_rpc_method_handler(
                    servicer.method3,
                    request_deserializer=teste__pb2.LongList.FromString,
                    response_serializer=teste__pb2.Long.SerializeToString,
            ),
            'method4': grpc.unary_unary_rpc_method_handler(
                    servicer.method4,
                    request_deserializer=teste__pb2.String.FromString,
                    response_serializer=teste__pb2.String.SerializeToString,
            ),
            'method5': grpc.unary_unary_rpc_method_handler(
                    servicer.method5,
                    request_deserializer=teste__pb2.Carro.FromString,
                    response_serializer=teste__pb2.Carro.SerializeToString,
            ),
            'method6': grpc.unary_unary_rpc_method_handler(
                    servicer.method6,
                    request_deserializer=teste__pb2.MatrizesRequest.FromString,
                    response_serializer=teste__pb2.MatrizResposta.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'teste.Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service(object):
    """Definicao do servico grpc
    """

    @staticmethod
    def method1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teste.Service/method1',
            teste__pb2.Nada.SerializeToString,
            teste__pb2.Nada.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def method2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teste.Service/method2',
            teste__pb2.Long.SerializeToString,
            teste__pb2.Long.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def method3(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teste.Service/method3',
            teste__pb2.LongList.SerializeToString,
            teste__pb2.Long.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def method4(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teste.Service/method4',
            teste__pb2.String.SerializeToString,
            teste__pb2.String.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def method5(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teste.Service/method5',
            teste__pb2.Carro.SerializeToString,
            teste__pb2.Carro.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def method6(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/teste.Service/method6',
            teste__pb2.MatrizesRequest.SerializeToString,
            teste__pb2.MatrizResposta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
